diff -Naurp a/fs/ext4/resize.c b/fs/ext4/resize.c
--- a/fs/ext4/resize.c
+++ b/fs/ext4/resize.c
@@ -74,6 +74,15 @@ int ext4_resize_begin(struct super_block
 		return -EPERM;
 	}
 
+	if (sb->s_blocksize_bits != sb->s_bdev->bd_inode->i_blkbits) {
+		ext4_warning(sb, "resize not supported because "
+				 "fs block size (%d) doesn't match "
+				 "device block size (%d)",
+			     1 << sb->s_blocksize_bits,
+			     1 << sb->s_bdev->bd_inode->i_blkbits);
+		return -EOPNOTSUPP;
+	}
+
 	if (test_and_set_bit_lock(EXT4_FLAGS_RESIZING,
 				  &EXT4_SB(sb)->s_ext4_flags))
 		ret = -EBUSY;
@@ -2096,7 +2105,8 @@ out:
 	if (err)
 		ext4_warning(sb, "error (%d) occurred during "
 			     "file system resize", err);
-	ext4_msg(sb, KERN_INFO, "resized filesystem to %llu",
-		 ext4_blocks_count(es));
+	if (!err)
+		ext4_msg(sb, KERN_INFO, "resized filesystem to %llu",
+			 n_blocks_count);
 	return err;
 }
diff -Naurp a/fs/fat/file.c b/fs/fat/file.c
--- a/fs/fat/file.c
+++ b/fs/fat/file.c
@@ -210,7 +210,7 @@ const struct file_operations fat_file_op
 	.fsync		= fat_file_fsync,
 	.splice_read	= generic_file_splice_read,
 	.splice_write	= iter_file_splice_write,
-	.fallocate	= fat_fallocate,
+	//.fallocate	= fat_fallocate,
 };
 
 static int fat_cont_expand(struct inode *inode, loff_t size)
