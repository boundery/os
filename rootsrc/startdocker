#!/bin/sh

pidfile=/var/run/dockerd.pid

if [ "$1" = -k ]; then
    if [ -f "$pidfile" ]; then
        echo Stopping dockerd
        kill `cat "$pidfile"`
        while [ -f "$pidfile" ]; do
            sleep 0.5
        done
    fi
    exit
fi

echo Starting docker

if ! grep -q '^cgroup /sys/fs/cgroup tmpfs' < /proc/mounts; then
    mount /sys/fs/cgroup
    (
        cd /sys/fs/cgroup
        for sys in $(awk '!/^#/ { if ($4 == 1) print $1 }' /proc/cgroups); do
            mkdir -p $sys
            if ! mountpoint -q $sys; then
                if ! mount -n -t cgroup -o $sys cgroup $sys; then
                    rmdir $sys || true
                fi
            fi
        done
    )
fi

# docker run --privileged needs this
echo 1 >/sys/fs/cgroup/memory/memory.use_hierarchy

for i in /boot/layers/*.layers; do
    for layer in `cat $i`; do
        if ! mountpoint -q /boot/layers/$layer; then
            mount -tsquashfs /boot/layers/$layer.sqfs /boot/layers/$layer
        fi
    done
done

dockerd -p "$pidfile" 2>&1 | logger -p daemon.info -t dockerd &

while ! docker info >/dev/null 2>&1; do
    sleep 0.5
done

# If we don't have a network, we won't have resolv.conf, and docker won't start
# containers.
touch /etc/resolv.conf

if [ -n "`docker images -q python3`" ]; then
    docker ps -aq | xargs -r docker rm
else
    for i in /boot/layers/*.layers; do
        if [ "$i" = "/boot/layers/rootfs.layers" ]; then continue; fi

        name=`basename ${i%.*}`

        echo Creating docker image $name
        unsplit-tar ${i%.*} /boot/layers | docker load

        # if container name has a prefix, tag it with the plain name
        prefname="$(docker images --format "{{.Repository}}" "*/$name")"
        # there should only be one, if any
        if [ -n "$prefname" ]; then
            docker image tag "$prefname" $name
        fi

        for layer in `cat $i`; do
            DIRNAME=`grep $layer /var/lib/docker/image/overlay2/layerdb/sha256/*/diff | cut -d'/' -f9`
            CACHEID=`cat /var/lib/docker/image/overlay2/layerdb/sha256/$DIRNAME/cache-id`
            if [ -h /var/lib/docker/overlay2/$CACHEID ]; then continue; fi

            rm -rf /var/lib/docker/overlay2/$CACHEID/diff
            ln -sf /boot/layers/$layer /var/lib/docker/overlay2/$CACHEID/diff
        done
    done
fi
