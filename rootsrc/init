#!/bin/sh

# Set PATH.
# This does two things:
#     1. Set the path for ourselves.
#     2. Give subprocesses a path.
#        While dash provides a default path if we are started
#        without one, it it not exported.  So do that here.

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

mount -a

hostname `cat /etc/hostname`

syslogd -C64
klogd -c5

echo 5 >/proc/sys/kernel/panic

modprobe brcmfmac
(netd &)

#Start docker daemon
mkdir -p /tmp/docker/etc
mount --bind /tmp/docker/etc /etc/docker
mount -osize=256M /var/lib/docker
startdocker
mount -oremount /var/lib/docker

#Bring up mdev to run storage manager
mkdir -p /tmp/lvm/etc
cp /etc/lvm/lvm.conf /tmp/lvm/etc
mount --bind /tmp/lvm/etc /etc/lvm

echo >/dev/mdev.seq
echo /sbin/mdev >/proc/sys/kernel/hotplug
mdev -s &

#Start zerotier system containers
#XXX Need to put /var/lib/zerotier-one somewhere persistent, so we can
#    upgrade the ZT container.
chmod og+rw /dev/net/tun
if [ -f /boot/zerotier.conf ]; then
     . /boot/zerotier.conf
     docker run -d --net=host -e ZEROTIER_TOKEN=${ZEROTIER_TOKEN} \
            --cap-add=NET_ADMIN --cap-add=SYS_ADMIN --device=/dev/net/tun \
            --name zerotier zerotier
fi

#XXX eventually this will be some form of getty
setsid -cw bash -l

kill `cat /var/run/dockerd.pid`
storagemgr -u -v
netd -k
umount -a
sync
