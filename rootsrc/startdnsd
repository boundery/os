#!/bin/sh

# The default mode is to run interactively in the foreground.
# We use -t for that because it buffers stdout otherwise.
# Then we also have to use -i to make control-C work.
# Otherwise, it kills the docker process but leaves the container
# running detached.
# Daemon mode (-d) runs docker with -d (detached) and dnsd with -d
# (log to syslog).
createargs="-it"
startargs="-i"
cmd=dnsd
mounts="--mount=type=bind,src=/dev/log,dst=/dev/log"

if [ "$1" = -d ]; then
    # noninteraction, dnsd in daemon mode
    createargs=""
    startargs=""
    cmd="$cmd -d"
    shift
elif [ "$1" = -s ]; then
    # interactive shell for debugging
    cmd=bash
    shift
    if [ -f /.bashrc ]; then
        mounts="$mounts --mount=type=bind,src=/.bashrc,dst=/root/.bashrc"
    fi
fi

storage=/mnt/vol00
if ! mountpoint -q "$storage"; then
    echo "$storage not mounted." 1>&2
    echo "Can't start dnsd without persistent storage." 1>&2
    exit 1
fi

dir="$storage/dnsd/etc/dnsd"
if [ ! -d "$dir" ]; then
    mkdir -p "$dir"
    # XXX this is just for testing
    cat >"$dir/zones.json" <<'EOF'
[
    ["172.18.0.2", 53, "i.example.com", 3600, {
        "@": [
            ["SOA", "ns", "hostmaster", [2018050100, 3600, 300, 3600000, 1]],
            ["NS", "ns"],
            ["A", "172.18.0.1"]
        ],
        "ns": [ ["A", "172.18.0.2"] ]
    }],
    ["*", 53, "example.com", 3600, {
        "@": [
            ["SOA", "ns", "hostmaster", [2018050100, 3600, 300, 3600000, 1]],
            ["NS", "ns"],
            ["A", "0.0.0.0"]
        ],
        "ns": [ ["A", "0.0.0.0"] ]
    }]
]
EOF
fi
mounts="$mounts --mount=type=bind,src=$dir,dst=/etc/dnsd"

docker container create \
    --name=dnsd --rm $createargs $mounts \
    --network=bridge --publish=53:53/tcp --publish=53:53/udp \
    --cap-add=NET_BIND_SERVICE \
    dnsd $cmd "$@"
docker network connect --ip=172.18.0.2 private dnsd
exec docker container start $startargs dnsd
